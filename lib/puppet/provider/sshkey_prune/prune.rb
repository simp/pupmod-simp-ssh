Puppet::Type.type(:sshkey_prune).provide(:prune) do
  desc 'Update and prune gathered Host SSH keys'

  def insync?(is)
    sys_diff = (@system_hosts.keys - is)

    @num_pruned = sys_diff.length

    sys_diff.each do |host|
      notice "Pruning '#{host}'."
      @system_hosts.delete(host)
    end

    sys_diff.empty?
  end

  def sync
    require 'tempfile'

    tmp_fh = Tempfile.new('sshkey_prune')

    begin
      tmp_fh.puts(header)
      @system_hosts.keys.sort.each do |key|
        debug "Copying system host #{key}"
        tmp_fh.puts(@system_hosts[key])
      end

      tmp_fh.flush

      FileUtils.cp(tmp_fh.path, @resource[:name])
    rescue Exception => e
      err "Could not prune ssh keys! #{e}"
      @num_pruned = false
    ensure
      tmp_fh.close
    end
  end

  def retrieve
    catalog_hosts = @resource.autorequire.map do |x|
      x.to_s =~ %r{Sshkey\[(.*)\]\s} and Regexp.last_match(1)
    end

    @system_hosts = {}
    if File.readable?(@resource[:name])
      fh = File.open(@resource[:name], 'r')
      fh.each_line do |line|
        hostname = line.split(%r{\s}).first.split(',').first
        hostname !~ %r{^#} and @system_hosts[hostname] = line
      end
    end

    catalog_hosts
  end

  def change_to_s
    if !@num_pruned
      'Error Pruning Hosts'
    else
      "Pruned #{@num_pruned} hosts."
    end
  end

  private

  def header
    %(# HEADER: This file was autogenerated at #{Time.now} by puppet.
# HEADER: While it can still be managed manually, it is definitely not recommended.
# HEADER: Note particularly that the comments starting with 'Puppet Name' should
# HEADER: not be deleted, as doing so could cause duplicate cron jobs.\n)
  end
end
